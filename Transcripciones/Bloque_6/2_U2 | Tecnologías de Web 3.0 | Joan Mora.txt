Speaker speaker_not_detected | 00:16.525
¡Un saludo!

Speaker 0 | 00:25.558
Web3JS ha nacido como una solución a los tradicionales protocolos de Ethereum, que son bastante complejos. Y esa complejidad hace que desarrollar aplicaciones para Web3 sea, en términos de tiempo, bastante costoso, pero también caro. Con Web3JS, simplemente con unas líneas de código, te puedes conectar a uno de Ethereum. Basta con importar el paquete de npm, un gestor de paquetes de Javascript, y luego poner tu wallet y la URL de tu nodo. Los casos de uso de Web3JS son infinitos y te diré por qué. Porque JavaScript, el lenguaje que es el motor de Web3JS, se utilizó en un principio en el browser, pero también desde que ha surgido Node.js, también en el servidor. Entonces permite desarrollar cualquier tipo de aplicación que puedas ver en un navegador o incluso que puedas ver en tu escritorio. o que pueda reunir en un servidor, desde aplicaciones relacionadas con Machine Learning, casos de uso como guarda ficheros, etc. Para entender el almacenamiento distribuido hay que entender un poco su contrapartida el almacenamiento centralizado, que es el normal el que tenemos una base de datos en un servidor o tenemos cualquier otro sistema pero que generalmente consta de un nodo o varias réplicas de ese nodo y tiene problemas bastante importantes, como por ejemplo ¿qué pasa si ese nodo es atacado? puede que todos los datos que contiene se vean comprometidos ¿qué pasa si ese nodo se cae? la disponibilidad de ese nodo puede verse comprometida también. Si nos vamos a un modelo descentralizado lo que encontramos es que si cae un nodo habrá muchos más nodos disponibles para dar solución a esas demandas de datos. No solo eso, si se ataca un nodo la red en general no queda afectada. ¿Por qué? Porque hay un sistema de alertas que puede aislar a un nodo. Los datos en un sistema distribuido no se replican en todos los nodos por igual. Eso sería... irte a un sistema centralizado y simplemente añadir un montón de nodos lo que se hace es hacer una copia inteligente de los datos suficiente para que si un nodo cae por cualquier cosa un fallo eléctrico o cualquier otro tipo de problema podamos ser capaces de volver a retomar esos datos pero no solo eso, muchas veces los datos son tokenizados y repartidos existen mecanismos como algoritmos de Reed Salomon, por ejemplo que te permite a partir de... un 80% de la información recuperar otro 20% o sea que realmente no se hace una replicación exacta sino una replicación inteligente y suficiente. En general no lo tiene por qué hacer más lento aunque eso depende mucho del nodo y las condiciones de la red pero lo que se intenta es distribuir las redes alrededor de zonas por ejemplo si estás en Europa puedes tener una red descentralizada dentro de Europa. En términos de performance, si tenemos nodos distribuidos por todo el mundo, obviamente la performance va a depender, especialmente, del hardware que tenga ese nodo, de las condiciones en las que esté trabajando ese nodo, por ejemplo, si tiene mucha carga o poca, aunque se distribuya la carga muchas veces, una red puede saturarse, y es un poco la performance de una red, puede depender de muchísimas variables. Pero en general se suelen comportar mejor que redes centralizadas. Tenemos diferentes sistemas de almacenamiento centralizado y distribuido. Tenemos, por ejemplo, Postgres o Mongo como centralizados y luego Cassandra como distribuido, que lo que proporcionan es, por un lado, tenemos más availability, que se llama, pero comprometemos consistencia en los sistemas distribuidos. Pero, por otro lado, aunque se garantice la consistencia en bases de datos como Mongo o Postgres, la availability no está siempre asegurada y muchas veces colapsan porque hay un montón de peticiones, etcétera. En general, tu navegador, cuando necesita entrar a un portal web, tiene direcciones como tiene tu casa. Y esa dirección es con números. Esos números se llaman la dirección IP. Entonces, una dirección IP es casi imposible de recordar. Para cualquier ser humano, imagínate recordar las direcciones IP de los 20 sitios que más entras. Para ello, se inventó la DNS, que permite que con un nombre simplemente el sistema pueda matchear ese nombre con una dirección IP y pueda buscarlo. Los servicios del DNS, aunque estén distribuidos por todo el mundo, tienen un gran problema, que hay pocos, digamos que hay varias, una jerarquía de niveles en la red y los DNS están bastante arriba, por lo tanto, hay pocos nodos que sirven estos nombres y suelen colapsarse. La DNS, como buen sistema distribuido, funciona por diferentes niveles y aunque sea distribuido hay que decir que hay bastantes pocos nodos imagínate, pues, abajo en el primer nivel tendríamos nodos normales y corrientes pero imagínate que subimos un par de niveles y tenemos los nodos DNS entonces el primer nivel lo que hace es preguntar oye, ¿existe esta dirección de...? de, por ejemplo, Google, existe esta dirección y si estás en Europa te puede volver, pero imagínate que no pides Google, pides una universidad en Australia, entonces a lo mejor el nodo que está en Europa no lo tiene. Vamos al siguiente nivel, vamos hacia arriba, este nodo te puede decir, oye, esto es Australia, yo sé dónde está Australia, y te manda otro nodo, luego volvemos a subir y volvemos a bajar, es un poco como funciona la DNS. Entonces, esto obviamente carrea problemas porque no está suficientemente replicada. Estaría bien que tuvieses todos los nombres disponibles en tu zona, pero al mismo tiempo, como no hay disponibilidad de instancias, tienes que preguntar hacia arriba. En la blockchain también existen sistemas parecidos a las DNS que matchean tu wallet con un nombre. Entonces, no tienes que recordar estos dígitos en esa decimal y puedes dar un nombre como tu wallet. En blockchain también contamos con DNS, que simplemente guardan el número del wallet y lo matchan a un nombre, por lo que puedes dar un nombre en vez de un número exacto. IPFS sale de las siglas de International Planetary File System, fue inventado por Protocol Labs, y básicamente lo que busca es un sistema donde no necesites IPs para guardar información, sino que guardes la propia información. Entonces, lo que quiere BBS en vez de usar tu IP, usar el hash de tu información. Entonces, lo que se produce, una consecuencia directa, es que la búsqueda es directa. Buscas un hash y encontrarías tu fichero. Básicamente, cuando quieres guardar un fichero en IPPS, lo que se hace es particionar tu unidad de datos en 256K, y el primer elemento es el que se indexa el resto pasa a una tabla de índices referenciada por ese elemento indexado entonces, la búsqueda de un elemento es de una complejidad lineal directamente se busca un hash y se encuentra el resultado esto tiene problemas también ¿por qué? porque tenemos el archivo muy fragmentado y hay complejidades, por ejemplo ¿cómo sé que un nodo tiene disponible ese trozo de fichero? hay que hacer pruebas criptográficas para validar que tiene ese trozo de fichero y no solo eso, que la integridad se cumple, en ninguno de los nodos ha podido editar ese fichero. A nivel de seguridad es un tipo de manejamiento mucho más seguro que el sistema que tenemos hoy en día, porque se hacen pruebas criptográficas del contenido que realmente se guarda y no solo eso, es una red que está bastante protegida, ya que no se puede manipular. los fragmentos no solo se encuentran en un nodo, están replicados además y es prácticamente imposible robar cualquier tipo de información Hemos pasado un tiempo donde ha habido un enfoque mucho más especulador dentro de Web3 y ha habido un montón de empresas que ahora mismo no han logrado tener éxito pero eso no supone un problema de cara al futuro ¿Por qué? Porque realmente lo que estamos construyendo es el siguiente Internet y lo que tenemos que focalizarse es qué problema estamos intentando solucionar. Ahora mismo tenemos un problema de privacidad del usuario y no podemos o no simplemente no podemos, el usuario se merece algo más que unos anuncios cuando busca algo en Google. Tenemos que ofrecerle valor y es un poco donde el futuro de la web 3 reside, en ofrecer valor y no especulación. Bueno, no solo existe este punto de que tú puedes conectar un nodo. a una red y ganar dinero para almacenar datos de terceros, sino también desde el punto de vista del usuario, lo que puede... conseguir dentro de la web 3 es no vender sus datos, no ser un producto dentro de la red y no sólo eso, es que la forma en que se construyen productos dentro de la red cambie, no se haga tanto en oye te vamos a vender esto o lo otro porque te conocemos sino te vamos a hacer un valor y tú ya decidirás si pagas o no por ese valor entonces el usuario puede estar más seguro de que todos sus datos le pertenecen a él por ejemplo, con todo el tema de la pandemia y el COVID, se hubiese podido hacer una gestión mucho mejor de todos los datos, por ejemplo, de los historiales médicos, etcétera, con tecnologías que están impulsadas por Web3.