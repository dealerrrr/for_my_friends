Speaker 0 | 00:12.502
Zilweb es un servicio que nos permite construir aplicaciones web 3 de forma muy rápida y sencilla utilizando una nueva aproximación, que en este caso es la aproximación de no-code, es decir, no tenemos que saber programar para poder crear aplicaciones web 3 que sean completamente funcionales dentro de lo que serían las diferentes blockchains que soporta Zilweb. Zirc Web es un servicio bastante nuevo que nos permite llegar y construir aplicaciones utilizando no code o Yes Code. Es decir, puede ajustarse a las necesidades de desarrollo que cada persona pueda tener. ¿Sabes programar? Puedes utilizar todo el servicio de SDK que tiene ZilWeb para llegar y crear tus aplicaciones desde cero utilizando código. No sabes programar, pero quieres crear una aplicación descentralizada, sencilla, por ejemplo, una pasarela de pagos, puedes hacerlo también utilizando ZilWeb porque estas personas o este desarrollo tiene todas las capacidades o las infraestructuras que te permiten hacer esto. Ahora bien, ¿Cómo podemos llegar y empezar a construir? Pues bien, aquí en ZilWeb tenemos dos opciones, que en este caso ya hemos comentado, podemos construir todo desde cero, utilizando una construcción propia, que en este caso es la que vemos a la mano derecha aquí señalando. que nos permite utilizar templates o extensiones y diferentes SDKs que ya tienen construidas las personas de Zilkweb. O podemos utilizar las opciones preconstruidas. En este caso, muchas han sido editadas, han sido optimizadas y que se encuentran simplemente a un clic de distancia para que puedas utilizarlas sin mayores problemas. ¿Cómo podemos utilizar cualquiera de estas opciones? Pues bien, vamos a hacer, en este caso, la opción de utilizar un preconstruido. Simplemente vamos a hacer clic en explorar los contratos preconstruidos. Y en nuestra pantalla ya podemos ver los diferentes contratos que han sido construidos por ZilWeb y que podemos utilizar sin ningún problema dentro de lo que serían nuestras aplicaciones descentralizadas. En este caso podemos ver aplicaciones como un Drop de NFT para crear NFTs y dropearlos a las personas que lo soliciten. Un Sixth Attribute Drop, que en este caso también es un tipo de NFT, que en este caso es una firma que puede llegar y ser reclamada por otras personas. Marketplace, que en este caso es un marketplace para toques ERC-721 o ERC-1155, que en este caso soporta ambos estándares. Y por último, el NFT que se llama Drop, que en este caso es un NFT que es un tipo de NFT que puede ser reclamado por otras personas. En este caso, es un NFT que se llama Drop, que en este caso es un NFT que puede ser reclamado por otras personas. Y por último, el NFT que se llama Drop, que en este caso es un NFT que es un NFT que se llama Drop, que en este caso es un NFT que puede ser reclamado por otras personas. Edition Drop, que también es un sistema NFT para múltiples dueños. Multi Wrap, que en este caso nos permite transformar diferentes tokens para llegar y hacer un wrapper de esos tokens. Podemos también crear tokens ERC20, tal como en el caso de Bit2Bin y Token, que es un token ERC20, o cualquier otro token, como en el caso de USDT, que también es un token ERC20. Podemos hacer ERC1155, que sean mintiables. Podemos hacer diferentes cosas, tal como podemos ver en este pequeño compendio de aplicaciones que están disponibles dentro de lo que sería ZipWeb. Ahora bien, ¿Cómo puedo llegar y utilizar todas estas plantillas construidas y poder desplegarlas de forma bastante sencilla utilizando ZipWeb? Pues bien, esto es bastante fácil. Simplemente vamos aquí arriba donde está la parte de conectar monedero. Simplemente le damos conectar y efectivamente ya estamos conectados. Tenemos que estamos conectados a la red Matic. porque ese es otro punto positivo de este web y es que soportan varias redes dentro de lo que serían sus servicios. Así por ejemplo, si yo quiero llegar y crear un token ERC20, vamos aquí, simplemente lo selecciono y me está preguntando la información básica de este token. En este caso, el nombre, vamos a ponerle test, WordPress. y le vamos a poner como símbolo TW3. En este caso podemos ver esto es un token, un token de prueba para Web3, la descripción de nuestro token y aquí tenemos la dirección de recipiente que en este caso es la misma dirección que tenemos en nuestro monedero y hacemos aquí la plataforma FIP, que es el caso de las comisiones que se pueden cobrar en la plataforma por los diferentes servicios o diferentes interacciones que se realicen. En este caso lo vamos a dejar en 0%. Vamos a hacer el despliegue dentro de lo que sería la red Mumbai Thematic. Lo que había dicho anteriormente sobre el soporte de redes de ZipWeb. Aquí están todas las redes que soporta ZipWeb, en este caso para el despliegue de aplicaciones, que son Ethereum, Polygon, Phantom, Avalanche, Optimist, Arbitrum y Binance Smart Chain. También tenemos las testnets, Rigby, Whirly, Mumbai, Phantom testnet, Avalanche Fuji, Optimus, Kaban, Optimix, Whirly, Arbiton Rigby y Whirly también de Arbiton. Como pueden ver, tienen muchas, muchas redes descentralizadas. soportadas para que puedan llegar y realizar todas sus acciones. En este caso estamos utilizando la red de Moonbyte Matic nuevamente para no para simplemente hacer una prueba de estos sistemas sin que ello cueste un centavo económicamente hablando para nosotros. Ustedes pueden llegar y hacer todo este proceso de forma bastante sencilla, de manera que no tengan que utilizar dinero real para realizar estas pruebas y puedan aprender sin mayores miedos ni mayores dificultades. Ahora bien, ya tenemos aquí entonces que vamos a hacer nuestro despliegue dentro de la red Mumbai. y ya tenemos todo aquí, no tenemos ninguna imagen, no vamos a colocar ninguna imagen por el momento, simplemente hacemos entonces clic en deploy now. Con ello estamos desplegando lo que sería nuestro contrato dentro de la red Mumbai y esperamos un momento ahora a que esto llegue a la red Mumbai Dramatic y podamos ver la operación dentro de lo que sería la blockchain. Muy bien, ya ha sido confirmada, estamos esperando y tenemos un error. Ya, listo. Ok, ya aquí estamos dentro de lo que sería el dashboard de nuestro token y simplemente podemos ver los diferentes eventos que ya se han sucedido sobre la blockchain, en este caso, Matic. Vamos a reconectar aquí la wallet. Ok, reconectada. ya podemos ver que se ha quitado, teníamos 1.5 MATE, ahora tenemos 1.496.9, es decir, que se ha realizado la operación de forma efectiva. Podemos ver aquí que nuestra transacción ya ha sido realizada. Si revisamos esto en PolygonSCAN, debería darnos nuestro, aquí está, sí, efectivamente ya ha sido realizado. Y vamos aquí a la parte de tokens, podemos ver el supply. y la cantidad de toques que han sido creados, lo que está en tu poder y la cantidad de decimales. En este caso no hay ningún supply, simplemente debemos crearlo. Vamos a crear un supply de 21 millones y hacemos el mint. En este caso el mint nos va a crear 21 millones de tokens. Simplemente debemos esperar un momento. Aquí está. Ya ha sido confirmada, esperamos un momento. Y... Muy bien, ya ha sido confirmada y ha sido creada. Tenemos entonces nuestros 21 millones de tokens TW3. Y si vamos a eventos nuevamente, podemos ver la segunda operación. Aquí está. Nuestra segunda operación, aquí está toda la operación en la que creamos 21 millones de tokens. Simplemente vamos a revisar otra vez esta operación. Vamos aquí. y aquí efectivamente está. Entonces, aquí, en esta segunda operación, es donde están los datos importantes. En este caso, vemos que fue incluida en el bloque 21 millones, 28 millones, 170 mil desde este contrato. interactuó con este contrato y se han transferido 21 millones de tokens TESWeb3. Aquí está nuestro token ERC20 creado sobre Polygon utilizando la red Mumbai. Nuestro token TESWeb3 ha sido creado con éxito utilizando los servicios de ZilWeb. Así como pueden ver, es bastante sencillo crear aplicaciones descentralizadas utilizando este tipo de servicios. Y fíjense que no es solamente la creación o generación, simplemente tenemos un control completo. Podemos llegar y, por ejemplo, administrar el token utilizando este sencillo dashboard en el que podemos incluir lo que serían administradores. que es la persona que puede administrar el token directamente. Podemos llegar y removerlo, podemos crear diferentes tokens o diferentes personas como administradores. Podemos crear personalidades para administrador o creador. O simplemente podemos llegar y borrarlos de manera que podamos crear una cantidad de tokens una sola vez. En este caso, los 21 millones de tokens. Y el resto, simplemente dejamos de emitir, de seguir emitiendo tokens dentro de lo que sería este tipo de tokens. ERC20. Podemos llegar y ver el código. que en este caso es una opción que no está disponible de momento, pero estoy seguro que los usuarios de Z-Web van a dejar esta opción completamente funcional para que podamos llegar y ver todo el código que está detrás de este sistema. También podemos ver la parte de settings, que en este caso nos permite subir el archivo de imagen para nuestro token, actualizar la metadata, actualizar diferentes opciones que nos aparecen dentro de la creación inicial del token, y podemos también ver el source, que en este caso son el código, los demás contras como tal. En este caso, aquí está el token ERC20 y este es el código que se ha utilizado para generar nuestro token descentralizado, nuestro token ERC20 TW3. Aquí está todo el código para que pueda ser verificado y pueda ser revisado por cualquier persona en cualquier momento. Para esta otra opción, también que nos deja, nos da la seguridad de que todo ha sido realizado de forma correcta y que no hay ninguna parte oculta dentro de la generación de este token o de este tipo de herramientas. Otra herramienta muy parecida a CircWeb, que se llama Bounce. Y en este caso también es una herramienta no-code que nos permite crear aplicaciones centralizadas de forma bastante sencilla. y que puede servirnos para desplegar cualquier tipo de smart contract básico dentro de las redes que están soportadas. En este caso, podemos ver que Bounce ofrece soporte para la creación de NFTs de Marketplace, para la realización de ecos, creación de token y algunos servicios del tipo DeFi que podemos llegar y crear simplemente con un par de clics. el soporte de las cadenas que tiene, en este caso sería para las redes Ethereum, Polygon, Avalanche, BSC, Arbitrum y Astar. Básicamente, tanto Bonds como ZilWeb ofrecen soporte a todo lo que serían las cadenas provenientes o compatibles con la Ethereum Virtual Machine. Y simplemente nos permiten crear estas aplicaciones con un par de clics, tal como lo veremos a continuación. Vamos a llegar y elegimos construir una de app para que nos dirija entonces al sistema de aplicaciones, al sistema de creación de aplicaciones. Esperamos un momento. Aquí estamos. Nos está pidiendo que hagamos una suscripción. En este caso, vamos a hacer una identificación. Vamos aquí, Testing. OK, aquí vamos a crear nuestra cuenta. Le tenemos el nombre de usuario, la dirección de correo, nuestra cuenta de reseña. Vamos a hacer una creación. la suscripción y esperamos un momento. Nos están pidiendo una confirmación, vamos a esperar la confirmación. Muy bien, aquí nos pide un código de verificación que está en nuestro correo. Aquí simplemente lo copiamos, confirmamos y seguimos adelante con el proceso. Esperamos un momento. Bien, ya estamos aquí y podemos ver que nos está diciendo que el Smart Contract Hub está en beta. Encuentramos un bug, bueno, avisemos a estas personas para que puedan repararlo. Y vamos rápidamente entonces a conectar nuestra wallet Metamask. Muy bien, ya está conectado. Estamos utilizando la red Mumbai de Tessnet para la red Polygon. Tenemos una aplicación descentralizada en este caso. Y vamos a darle un nombre. Vamos a darle Tessnet 3.0. Vamos a darle a crear. La cadena que vamos a utilizar va a ser en este caso Polygon Mumbai. Muy bien, ahora estamos aquí en el dashboard. y vamos a revisar las opciones de nuestro token, que en este caso es la dirección que lo ha creado, es esta que está aquí, la dirección o la red en la que se ha creado es la red Mumbai, la TSNET de Polygon y vamos a desplegar las opciones que aparecen aquí. Muy bien, aquí tenemos todo lo que podemos realizar dentro del token y en este caso vamos a dejar que se despliegue. Vamos a empezar por la opción E. hacer un mint, vamos a crear nuevos tokens dentro del sistema. Para ello vamos a buscar la opción de mint, aquí está, vamos a desplegarla y aquí tenemos que tenemos que enviarla a una dirección y una cantidad determinada. En este caso vamos a copiar la dirección de nuestro monedero, y vamos a crear una cantidad de tokens. En este caso 21 millones serían y vamos a agregar y creamos. Esperamos un momento que se realice la operación dentro de la blockchain. Muy bien, aquí vamos a revisar entonces nuestro monedero y aquí efectivamente podemos ver que tenemos 21 millones, o bueno 2 millones, 21 millones de tokens completamente creados dentro de nuestro monedero Metamask, en este caso conectado a la red ¿Por qué escribir 21 millones de esta manera? Recuerden que me estamos hablando de creación de token GRC20 y que normalmente se trabaja con... cifras decimales hasta 18 decimales, entonces tenemos que llegar y tener en cuenta la cantidad de cifras adicionales que tenemos que crear para que eso se nos convierta en los 21 millones que realmente queremos emitir. En este caso, como pueden ver, es bastante sencillo también la interfaz un poco más complejo de lo que aparecía en Silkweb, pero igualmente fácil de utilizar para llegar y crear este tipo de aplicaciones descentralizadas o tokens, en este caso, como hemos creado aquí. para desplegarlos de forma muy sencilla sin tener que realizar ninguna escritura de código adicional. Por supuesto, eso tampoco significa que no podamos escribir código. Podemos también utilizar los SDK con los que la gente de Bounce ha ido realizando. En este caso, podemos ver la documentación del sistema. Vamos a revisarla. porque tenemos la capacidad también de desplegar contratos del tipo Yes Code. Es decir, podemos crear nuestros propios contratos utilizando todas las infraestructuras que ellos han hecho o han realizado para facilitar esta tarea. Entonces, como pueden ver, aquí están todas las guías del SDK. y todo lo necesario para llegar y utilizar estas aplicaciones de forma bastante sencilla dentro de nuestras propias aplicaciones y crear nuestras propias experiencias web3 sin mayores complicaciones. Espero que les haya gustado esta herramienta y les invito a que la examinen y que la exploren de forma completa para que puedan aprovechar todo su potencial.