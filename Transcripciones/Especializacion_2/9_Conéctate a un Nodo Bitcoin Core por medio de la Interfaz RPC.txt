Speaker 0 | 00:05.642
Una de las funciones más útiles que podemos ver dentro de los softwares de criptomonedas es la de activar el servidor RPC. Los servidores RPC dentro de estos softwares de nodos nos permiten llegar y utilizar o crear aplicaciones externas a lo que sería el mismo nodo y poder requerirle información a estos y analizarlos para luego generar aplicaciones mucho más avanzadas o mucho más centradas en una determinada función. Veamos por ejemplo el caso de lo que sería. los exploradores de bloques. Normalmente cuando vemos un explorador de bloques simplemente vemos una interfaz gráfica que es la cargada de mostrar lo que es la información del explorador como tal. Entonces vamos a ver un momento aquí en el explorador de BitTuny y vamos a ver cómo funciona un poco este explorador Normalmente lo que pasa con estos exploradores es que se solicita información a los nodos por medio de este servidor RPC y luego esta información es analizada y almacenada dentro de bases de datos que luego son consultadas por medio de otros lenguajes como Javascript para llegar y mostrar información de aquello que le interesa a los usuarios por supuesto esta información que se extrae de los nodos se extrae por medio de lo que sería llamadas al servidor RPC de estos softwares de los nodos y luego son transformadas y analizadas por lenguaje de programación distintos como lo serían Python, JavaScript, Go, lenguaje C, dependiendo de cómo esté escrita nuestra aplicación. Por supuesto, esta utilidad es la que nos permite generar cosas como los exploradores de bloques, pero también nos permite generar otras aplicaciones más avanzadas como serían, por ejemplo, el caso de DEX o Exchange descentralizados, como sería el caso de BISC, que es un exchange descentralizado para Bitcoin que utiliza precisamente la capacidad RPC. para generar toda la funcionalidad que necesita este exchange descentralizado para funcionar dentro de la red Bitcoin. Así pues, entonces podemos entender que los RPCs son una parte muy importante del software de los nodos. Y lo que veremos a continuación es cómo utilizar este software o cómo habilitar este servidor RPC dentro de Bitcoin Core. Nosotros actualmente, aquí ya estamos ejecutando una instancia de Bitcoin Core. Aquí tenemos actualmente una wallet creada, está recién creada y vemos que estamos sincronizando nuestro nodo. Pues bien, ¿cómo activamos el servidor RPC dentro de lo que sería Bitcoin Core? Bitcoin Core. Simplemente vamos a Y aquí podemos ver que está la opción activar servidor RPC completamente seleccionada. Esto activa de forma inicial lo que sería el servidor RPC dentro de lo que sería Bitcoin Core. Sin embargo, también en el archivo de configuración podemos establecer toda esta funcionalidad simplemente abriendo el archivo. y verificando o colocando la siguiente información dentro del mismo. En este caso, server igual uno activa nuestro servidor RPC, RPC bin y esta dirección IP que está aquí nos indica que el servidor RPC va a estar escuchando nada más la dirección local. En este caso la dirección local es 127.0.01 y que todas las IP con RPC al lado IP pueden requerir información a esa dirección. El puerto en este caso va a ser el RPC. puerto 8332 y el usuario de la contraseña va a hacer username y password. Un punto a tener en cuenta es que si vas a generar una aplicación que va a estar en un ambiente de producción o que va a estar abierto a internet, estos usuarios de contraseña deben ser usuarios de contraseña seguros, completamente fortificados, de ser posible utilizar toques de acceso para evitar que un tercero malicioso pueda acceder a tu nodo y hacer cosas no. muy deseables dentro del mismo. Recordemos a que Tenemos activado ya la opción de RPC dentro de Bitcoin Core. ¿Cómo podemos interactuar con ella utilizando un lenguaje de programación, por ejemplo, como Python? Pues bien, para eso simplemente deberíamos hacer lo siguiente. Ir a Python y realizar la instalación de nuestro intérprete de Bitcoin Core. comandos para Python. En este caso recordemos que Python es un lenguaje interpretado por lo que es fácilmente portable a otras otras arquitecturas, otros sistemas operativos y que comprende o tiene soporte para varias plataformas como lo pueden ser Windows, MacOS, Linux. De hecho en Linux, la mayoría de las distribuciones Linux tienen un instalador o tienen un compilador de Python ya instalado. Por ejemplo aquí que estoy utilizando Linux, vamos a abrir un momento la terminal. Y si vamos rápidamente, si escribimos Python 3, vemos que estamos utilizando la versión de Python 3.10.8 dentro de lo que sería nuestra instalación de sistema operativo. Así pues, podemos entonces estar seguros de que estamos utilizando Python dentro de lo que sería nuestro computador. Lo siguiente que vamos a hacer es generar un entorno de programación para lo que sería utilizar la librería Python necesaria para interactuar con el nodo RPC de Bitcoin. Esta librería que vamos a utilizar es muy conocida, que es la librería Python Bitcoin RPC. Esta librería fue creada por JigarSick y es este, es uno de los desarrolladores de Bitcoin Core, así que podemos estar seguros de que estamos utilizando una librería confiable. Esta librería nos permite tener una actualización con el servidor RPC de Bitcoin Core y desde allí enviar comandos que luego son respondidos por el software de Bitcoin Core. dándonos la información que le estamos requiriendo. Es bastante sencilla de utilizar. Aquí hay unos softwares de ejemplo que podemos utilizar para obtener información básica de lo que serían nuestros nodos. Simplemente pueden ir copiando estos ejemplos y ir trabajando sobre ellos para llegar y requerir la información que ustedes desean. Para eso, simplemente tienen que instalar la librería. Y aquí está la orden para instalarla, que es pip install bitcoin.py. Python, Bitcoin y RPC. Simplemente pueden copiarla y si la pegan, vamos a crear aquí, pip install python, bitcoin, rpc. Simplemente la instalan y ya con ello está completamente instalada la versión que necesitamos para esta librería. Una vez instalada. simplemente nos queda entonces empezar a programar lo que serían este tipo de instrucciones que necesitamos para solicitar información y cómo podemos hacer eso bueno en este caso vamos a utilizar Visual Studio Code ya yo tengo aquí un código previamente realizado en el que he hecho algunas pruebas pero voy a explicar un poco cómo o qué hace este código como tal Este código lo que hace es que carga la librería Python, la librería de autorización, y va a realizar una conexión a nuestro nodo local utilizando esta variable btcrpc y utilizando el método auserviceproxy. Este método va a pedirle a nuestro nodo que está en la dirección 127.0.01 en el puerto 8332, va a indicar el usuario y la contraseña y va a darnos el acceso para que podamos enviar información a nuestro nodo. Una vez que esté realizado este proceso, simplemente entonces podemos llegar y crear variables distintas para obtener información de los nodos utilizando lo que serían los comandos RPC de Bitcoin Core. Aquí podemos ver ya tres variables que he creado que son BTCChainInfo que es para obtener la información de la cadena del nodo MainPoolInfo que es para obtener la información del MainPool y WalletInfo para obtener la información de lo que sería el monedero que está dentro de nuestro software de nodo Para ello simplemente utilizamos la conexión que en este caso es BTCRPC y utilizamos los comandos RPC de software de Bitcoin Core que son GetBlockchainInfo, GetMainPoolInfo y GetWalletInfo ¿Dónde podemos ver estos comandos? O sea, ¿dónde está el conocimiento necesario para saber qué comando podemos utilizar? Pues bien, si vamos a Bitcoin Core... aquí en Bitcoin Core y vamos a la opción de ventana, consola, podemos ver lo siguiente. Aquí está todo lo que serían los comandos RPC que están habilitados dentro de lo que serían nuestros software de nodo y que podemos utilizar para llegar a obtener información de él mismo. En este caso, aquí están cada uno de estas operaciones que podemos utilizar y simplemente por ejemplo. si queremos obtener una información lo que tenemos que hacer es llegar y colocar vtrpc.ycolocar. el comando correspondiente junto con los valores necesarios para hacer la llamada del software. Así por ejemplo, que quiero obtener la información de la cadena, simplemente debo escribir btcChainInfo que sería la variable que vamos a cargar, va a ser igual a nuestro nodo, la conexión de nuestro nodo con el comando de RPC que es blockchaininfo. Vamos a ver qué información nos ofrece esto, simplemente vamos a cerrar. y vamos a ejecutar este dato aquí cuando lo ejecuto me da la información de la cadena, estamos en la cadena en lo que sería la cadena mainnet está actualmente nuestro nodo sincronizándose y va por el bloque 206.985 también tenemos que existen También tenemos que existen 766,536 bloques dentro de la cadena de blockchain, o sea, actualmente el último bloque que hay es el 766,536. Y así tenemos el resto de información de nuestro nodo, la dificultad, el tamaño de disco que está ocupando nuestro nodo y el tamaño máximo que puede ocupar. En este caso estamos ocupando un nodo podado con un límite de 2GB de almacenamiento. Y así tenemos el resto de información de nuestro nodo. Si queremos por ejemplo obtener información de la mempool, igualmente pasamos una variable, mempool info, obtenemos la... la información utilizando el comando rpc get mempool info utilizando esta estructura y para imprimir la información simplemente tenemos que entonces hacer el llamado a la función en este caso vamos a hacer un clear y vamos a hacer un f5 y aquí podemos ver entonces la información de el mempool desplegada dentro de lo que sería nuestra consola si queremos obtener la información de la wallet e igualmente copiamos la variable Y si la ejecutamos, podemos ver entonces que aquí está nuestra wallet con el nombre de prueba, la versión de la wallet y todo el saldo o la información de saldo que está dentro de esa wallet. Entonces, podemos entender cómo los RPC nos permiten entonces obtener información de los softwares de nodo, de todo lo que es el estatus de la blockchain y procesarlo a través de un lenguaje de programación que nos permite generar o crear nuevas herramientas de forma bastante sencilla que terminen o nos permitan generar nuevas aplicaciones que los usuarios puedan disfrutar de forma bastante sencilla. Por ejemplo, podemos crear un nodo de Bitcoin que se esté ejecutando en forma de nodo nada más y podemos crear una aplicación que utilice el RPC para comunicarse con ese nodo y enviar y recibir transacciones. Este sería el método que normalmente se utiliza dentro de lo que serían las wallets que normalmente vemos en los teléfonos Android o teléfonos o en software de computadoras como serían ElectrumX. o Electrum Wallet en este caso. Por ejemplo, Electrum Wallet, si vamos aquí a ese servicio, Electrum. Por ejemplo, en este caso Electrum y Electrum X, vamos a buscar a Electrum X, son dos softwares que están creados en Python Que están completamente al servicio de las personas, que uno de ellos es el servidor de la cadena, en este caso Electrum X es el servidor, o lo que sería el equivalente a beacon-core Y Electrum Wallet, que en este caso sería la parte del monedero, completamente separado del servidor, manteniendo así un mayor control nivel de seguridad. Esto sería una utilidad o una de las utilidades que nos permitirían los servidores RPC y que podemos disfrutar por medio de este lenguaje de programación llamado Python. Así pues, espero que les haya gustado este pequeño ejemplo de cómo utilizar un servidor RPC, de cómo podemos llegar y activarlo dentro de Bitcoin y poder generar aplicaciones bastante sencillas para utilizar información de la cadena y poder analizarla con otro tipo de lenguaje. Así pues, con esta práctica les invito a que disfruten de su potencial y nos vemos entonces en otra próxima ocasión