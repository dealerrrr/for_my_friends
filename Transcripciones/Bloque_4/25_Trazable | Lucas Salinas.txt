Speaker 0 | 00:24.842
Pues empezamos en la incubadora de Demium. Yo acabé ahí por accidente, Pablo creo que sí que fue premeditado el entrar ahí. Y bueno, pues nos conocimos un viernes en un evento que hay de captación de talento, en el que se van reuniendo a esas mentes que quieren emprender o que están buscando ahí algo distinto. Y nada, ese viernes nos conocemos, el lunes nos tocó trabajar juntos en el mismo equipo, pues un poco más por suerte. Y ese lunes estábamos diciendo, oye, vamos a trabajar juntos durante los próximos meses, porque en ese momento tú no te planteas, tengo delante a la persona que voy a verle la cara todas las mañanas durante los próximos cinco años de mi vida. Gran parte del desarrollo de Trazable ha habido mucha investigación en la que nos ha permitido ir jugando con redes como Ethereum, Bitcoin, redes privadas ya como Hyperledger con los proyectos que fue lanzando junto con IBM o con Intel, etc. Y luego blockchains de distintos tipos, públicas permisionadas, privadas sin permisionar, etc. Cuando empezamos Trazable, a finales de 2017, en ese momento la carrera ya no estaba centrándose tanto en cuál es la blockchain más eficiente, sino ya en empezar a explotar la capa de apetito. que es en parte el por qué Trazable decide asentarse en esa parte y decir vamos a trabajar en llevar a la industria esta tecnología que aún no es no es tan común que la tengan ahí y en ese momento las decisiones de a qué blockchain quieres utilizar suelen ser más las que tienen la respuesta de qué es viable a nivel de negocio, qué puedes defender en un modelo de negocio, en nuestro caso vamos a la industria y hay un gran volumen de transacciones no pueden ser blockchain con fees altas, por ejemplo, es algo que te desmonta cualquier modelo, es un variable enorme y sobre todo también en ese momento en el que Ethereum, por ejemplo, tiene durante ese año esos primeros picos de fees altas. Entonces eso es un poco lo que nos iba moviendo de decir, oye, tenemos que ir a una blockchain o a otra. La mayoría de desarrollo que nosotros hemos hecho siempre ha sido en Ethereum. Entonces, ahí hemos entrado muchísimo en Solidity. Es un mundo que hay que dedicarle casi tiempo completo, el llegar a tener una expertise ahí, sobre todo con lo que ha crecido ese lenguaje y la adopción de esa tecnología, y sobre todo cuando ves el mercado ahora mismo de los NFTs o de los tokens, que al final son Smart Contracts que hay por debajo, a pesar de todos los demás que hay, que no son solo de tokens. Entonces, eso es lo que más expertise hemos cogido. A lo mejor no es la tecnología idónea o el lenguaje idóneo, mejor dicho, si quieres empezar en el mundo del desarrollo, pero sí que es una parada obligatoria si eres desarrollador y quieres meterte en este mundillo. También, sobre todo, por el mercado de aplicaciones que hay disponible para ese desarrollador que quiere empezar, desde editores de código, de extensiones, que al final todos los desarrolladores o todos los que hemos desarrollado en algún momento tenemos ese grupito de herramientas que nos ayuda en nuestro día a día. Y en el caso de Solidity, ahora mismo ya te digo que estoy apartado ya de eso. desde hace tiempo de ahí, entonces imagino que ese mercado habrá evolucionado mucho, pero en aquel momento cuando estaba yo tocándolo en primera línea no era algo tan amigable. O sea, no estoy yo personalmente, pero porque me requiere el empezar a enfrentarme a otro tipo de retos, pues más a lo mejor de escalar el equipo, de entender las líneas de desarrollo, o cómo pueden afectar a la economía de la empresa al desarrollar de una forma o de otra, entender ya, mi rol se mueve ya hacia una zona en la que tengo que trabajar muy de la mano con negocio, entender sus necesidades, darle la mejor solución. Al final es siempre bueno, bonito, barato, rápido, pero llegar. Cuando nosotros hablamos de una tecnología descentralizada como blockchain, estamos hablando de que cuando tú escribes esa pieza de código que es Solidity y la despliegas, al final estás firmando una transacción, esa transacción ya todo el mundo sabe que es inmutable, y inmutable es que lo que hayas metido ahí, ahí se queda. Entonces cuando estamos hablando de meter una pieza de código en una transacción, estamos hablando de que si esa pieza de código tiene un bug, el bug pasa a ser inmutable. De hecho, uno de los miembros del equipo lo apodó con el concepto de Persistir Bugs, que es al final uno de los handicaps que tiene el que a nivel industrial estés haciendo aplicaciones en tecnologías como blockchain. Obviamente tienes tu entorno de staging, en nuestro caso, en el que podemos hacer las pruebas, pero te cambia un poco más la mentalidad a la hora de diseñar las aplicaciones, que ya no están hechas para que se puedan actualizar, sino que tienen que ser aplicaciones que su vida en producción sea efímera, que estés preparado para cambiar. por una nueva versión que vas a tener que desplegar, no vas a poder actualizar la antigua, y que perfectamente el diseño de la aplicación te permita redirigir todo lo que hayas generado a esa nueva versión. Te obliga a pensarlo de otra forma, y ahí hay parte del reto y es también parte bonita, solo que acabas teniendo más variables, estás en un B2B, vas a industria, volumen de transacciones, no es solo ya lo que has desplegado, la lógica que tienes, sino cómo se va a comportar esa lógica o esa red en concreto en la que se está ejecutando, cliente en concreto o este sector empiece a atacar con estas transacciones. Ahí decidimos no reinventar la rueda. El token al final es un estándar, es un RC20, es un estándar que está auditado. En nuestro caso nos apoyamos en Open Zeppelin, que ya tiene los estándares desarrollados. No tiene ningún sentido a partir de ahí volver a hacerlo, porque lo más seguro es que metas la pata y no tiene sentido correr ese riesgo. Entonces directamente Smart Contracts, que ya están auditados y estandarizados, se cogen y se utilizan, se despliegan con tus parámetros iniciales y ya tienes algo hecho que se está comportando para el resto de la carrera. los sitios igual. Y en el caso del sistema de trazabilidad, de la tecnología blockchain en nuestro caso, cuando trazable nace en 2017, como comentábamos que estábamos en un momento en el que empezaba a explotar el desarrollo de la capa de aplicación, pero no tanto ya el desarrollo de una blockchain más eficiente, estamos hablando de un momento en el que se hacía blockchain para todo. Cosas que decías, ¿hace falta blockchain aquí? Pues parecía que sí en ese momento. Y una de las cosas que nos pasó ahí es que había secretismo en cuanto a las estrategias. que había por alrededor del mundo fabricando sistemas de trazabilidad en blockchain o por lo menos no era una información tan abierta que pudieras encontrar y eso nos obligó a experimentar mucho, a hacer muchos... siempre digo que hemos hecho como alrededor de nueve sistemas de trazabilidad en el que en ese momento de tanto hype se apoyaba completamente en tecnología blockchain y conforme fuimos aprendiendo de ella y evolucionando el sistema fue pasando a capas en las que blockchain se empezaba a utilizar para lo que realmente tenía sentido y el resto del sistema que no tenía sentido tenía que salir de ahí ¡Chao! La trazabilidad es un efecto, al final, cuando tú quieres consultar la trazabilidad de algo es porque ha habido una serie de hitos que han pasado antes. Esos hitos, esas piezas de Lego que van a formar esa trazabilidad, son como las piezas de este algoritmo, y ahí lo que necesitamos siempre que entramos con un cliente nuevo, son, primero y todo, evaluar esas piezas, y luego saber cómo montarlas para que encajen en nuestro sistema, que es el que va a evaluar esas piezas, el orden en el que entran. para que pueda montar ese muñeco. Nosotros lo que tenemos es diseñado el sistema de trazabilidad que no deja de ser, tú estás fabricando X producto, ese producto tú has comprado unas materias primas que para ese otro actor o esa otra empresa eran su producto y con esas materias primas no solo las has utilizado para tu producto sino que además tu producto luego lo has distribuido a X o lo has utilizado, o sea que puede ser perfectamente un subproducto para la empresa que tiene siguiente delante. Entonces al final... esas son nuestras piezas. Luego el trabajo es conectar con cada actor esas piezas que salían, dónde están como piezas de entrada en este siguiente actor. Lo más que me atrae ahora mismo y desde el principio, es la propia cripto de Ethereum, pero solo porque la innovación que tuvieron al meter la máquina virtual, que ya no era una transacción en la que ibas a persistir información, sino que te permitía, con estos smart contracts, persistir lógicas de negocio. Me sigue pareciendo una maravilla y me sigue pareciendo que seguimos, sigue estando esa capa de aplicación aún por explotar. Eso es lo principal. Y como proyecto... Te iría por ejemplo de Centralland, dentro de Ethereum. Metaverso, un token que está hecho para la gente que construye dentro de ese Metaverso, está muy pensado para seguir avanzando, es un entorno que te permite seguir avanzando e innovando dentro de blockchain. Entonces, como proyecto es interesante. Es ideal que vengan ya con una base, que obviamente les va a ayudar a entender más esa documentación, que no sea la primera documentación que le den en su vida, la de Solidity, sino que ya sepan de qué va esto. Y una vez entres ahí ya es paciencia, prueba, error. Es algo muy guay lo que van a aprender ahí en Solidity, sobre todo cuando lo mezclen con tecnologías de desarrollo web, porque es donde ya estamos hablando del Web 3, y van a poder hacer enseguida aplicaciones muy pequeñas. que van a interactuar muy rápido con Smart Contracts que hayan podido desplegar ya, sin que los programen, que acudan a estándares, y pues puedes crearte tú tu propio Learning Path que te vaya motivando con hitos muy pequeños y enseguida acabar desarrollando cosas que digas ¡Ostras! Está bastante guay.