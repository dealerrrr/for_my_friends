Speaker 0 | 00:28.341
Unidad 2. ya no solo por el white paper de Satoshi, sino por toda la comunidad que había en aquella época a su alrededor. Esto serían los cypherpunks, y lo que buscaban entre ellos era tener un sistema, el cual por un lado no estuviese controlado por el Estado, por otro lado tuviese una privacidad por diseño y por matemáticas que no fuese dada por un organismo central que pretende mantenerla, o que hay que fiarse que pretende mantenerla. y a su vez que tuvieses distintos tipos de niveles de encriptación. Cuando un sistema falla, tuvieses un sistema secundario. Cuando el secundario falla, tuvieses un terciario. Esto se llama estecanografía. Dentro de esta comunidad inicial están los primeros empleados de Sound Microsystems. Fue el creador de la lista de correo de Cypherpunks. Y podemos ver un poquito cuáles sean esas ideas originales. No lo sé. no era tanto basado en un déficit financiero, como podemos pensar a día de hoy, sino muy centrado en separar privacidad y Estado. Tal es el hecho que a día de hoy tiene un montón de millones en la cartera y se dedica año sí, año no, a seguir denunciando a Estados Unidos como gobierno por violaciones de privacidad. Gente que, en un origen, tenía muy centrado el núcleo de... Oye, queremos, por un lado, la privacidad, y queremos, por otro lado, la seguridad. lado la independencia de un tercero para poder ir a nuestra bola. Para comentar un poquillo las diferencias entre centralizado, descentralizado y distribuido, tenemos que empezar diciendo que no son conjuntos disjuntos. Centralizado y descentralizado obviamente son tipos opuestos, pero los dos pueden ser distribuidos. Va a ser no distribuida solo en sus etapas más tempranas. Si montas una startup pasado mañana, esos primeros días posiblemente lo que hagas es levantar un servidor web que represente tu negocio, de una página web para ofrecer un servicio, suerte vaya muy bien y tengas que escalarlo. Cuando tienes que escalarlo ya no va a ser suficiente el tener una implementación única de tu servidor. Vas a tener que ir separando layers entre interfaces, middleware y capa de datos y empezar a escalar horizontalmente el hecho de cómo vas a manejar cada una de las peticiones que te están llegando. Para hacer eso lo que vas a montar es un sistema distribuido. Facebook, Twitter, B2Me, mi propia empresa, todos nosotros somos sistemas distribuidos en cuanto ya hemos hecho. tenido un poco de tamaño. ¿Cuál es la diferencia en un sistema centralizado y no descentralizado? El punto único de fallo. En cualquiera de los centralizados siempre hay una entidad que puede tirar del cable y acabar la fiesta. Siempre puede haber una entidad centralizada en un gobierno que puede denegar a tu empresa o a tu organismo social y denegar tu servicio. ¿Qué pasa cuando esto pasa de centralizado a descentralizado? Que tenemos dos obligatoriedades. Un organismo descentralizado y un organismo descentralizado. siempre va a tener que ser distribuido. ¿Por qué? Porque no hay un punto único de fallo, porque no hay un máster que está dirigiendo el cotarro y por ello vamos a necesitar que entre todos mantengamos la estructura. Si estamos hablando que un sistema distribuido tiene que ser perdón, un sistema descentralizado tiene que ser distribuido, lo que estamos teniendo en el fondo son duplicaciones del mismo código que todos estamos corriendo a la vez y todos estamos compartiendo esa información. Con ello... ganamos cosas, perdemos, es un poco lo que hemos comentado en unidades anteriores, robustez, performance, criticalidad de poder ser censurados por un sistema externo y para cada caso de uso tendremos que escoger cuál es la mejor solución.