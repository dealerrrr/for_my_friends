Una parte importante de toda la etapa de programación o desarrollo de una aplicación de app tiene que ver con las plataformas que nos permiten interactuar con la blockchain. En este caso, estudiaremos dos plataformas que son muy conocidas dentro de la comunidad que son Infura y Alchemy. Presentemos cada una de ellas. Infura es una plataforma dedicada a ofrecer a los desarrolladores de aplicaciones descentralizadas servicios que les permitan interconectar sus aplicaciones con los diferentes ecosistemas blockchain a los que esta plataforma tiene servicio. La idea es bastante sencilla, simplemente, Infura se encarga de gestionar la conexión a todo lo que es la blockchain, es decir, todo lo que son los nodos, todo lo que estos pueden realizar dentro de la blockchain, y ofrecen una API sencilla a los desarrolladores para que estos puedan llegar y conectar sus aplicaciones por medio de esta API y, de esta manera, poder tener acceso a las blockchains que Infura tiene en su capacidad de utilizar. Como pueden ver, Es una web bastante conocida en el mundo del desarrollo web, del desarrollo de aplicaciones centralizadas, porque, de hecho, parte de lo que son las grandes figuras del ecosistema, como son Metamask, Uniswap o Brave, dependen de las infraestructuras de Ifura o utilizan las infraestructuras de Ifura para su funcionamiento. Entonces, ¿Cómo podemos llegar y acceder a todos estos recursos de manera bastante sencilla? Pues bien, la mejor manera es simplemente ir a su web, que es la que estamos viendo ahorita en pantalla Y tranquilamente podemos llegar y realizar un login porque los servicios básicos de esta web son completamente gratis. Hay servicios de pago, pero estos servicios de pago son para grandes aplicaciones que requieren de un nivel de uso de recursos mucho más amplio y que entonces, por lo tanto, tendrían que aportar una cierta cantidad de dinero o pagar una determinada suscripción a los servicios de Fura. Sin embargo, si tú eres un desarrollador que estás empezando o que quieres desarrollar una aplicación bastante sencilla, algo personal, no te preocupes, porque si tú eres un desarrollador que está empezando o que quieres desarrollar una aplicación bastante sencilla, no te preocupes, porque si tú eres un desarrollador que está empezando o que quieres desarrollar una aplicación bastante sencilla, no te preocupes, porque si tú eres un desarrollador que está empezando o que quieres desarrollar una aplicación bastante sencilla, no te preocupes, porque si tú eres un desarrollador que está empezando o que quieres desarrollar una aplicación bastante sencilla, no te preocupes, porque si tú eres un desarrollador que está empezando o que quieres desarrollar una aplicación bastante sencilla, no te preocupes, porque si tú eres un desarrollador que está empezando o que quieres desarrollar una aplicación Infura ofrece un plan gratuito que es el que empezaremos a ver aquí para que tú sepas cómo utilizarlo y cómo poder llegar y desplegar todo el poder de esta plataforma. En este caso ya tenemos aquí un login y simplemente vamos a proceder a loggearnos. Pero si esta es tu primera vez entrando a la plataforma, lo primero que debes hacer entonces es hacer la suscripción. y aquí está para que puedas crear una cuenta. Simplemente debes poner tu correo electrónico, tu contraseña y aceptar los términos de uso. Luego, cuando tengas creada ya la cuenta, simplemente vas nuevamente a Login y aquí sí podemos llegar y acceder a la plataforma. En este punto, ya podemos ver el dashboard de Infura. Podemos ver que se nos pone una información relevante. En este caso, la información más relevante es el merge. Porque Infura tiene acceso a lo que es la red Ethereum. De hecho, fue creado con esa red en mente. Y aquí podemos ver todos los productos que podemos despegar. En este caso, tenemos la Web3 API, que es la API de Ethereum. La API de ETH2. IPFS y Filecon. Estas son las cuatro redes que soporta Infura de momento de forma oficial y de forma completa. Y también podemos ver los roles que son en este caso los roles que tú puedes ir creando dentro de cada uno de tus proyectos. Puede ser el dueño, administrador o contribuidor al proyecto. Ahora bien. Ya tenemos aquí desplegado todo lo que es la parte del dashboard. Yo quiero crear una API que me permita interconectar mi aplicación que estoy desarrollando con las capacidades que KFuno me ofrece. Para eso, simplemente iremos a crear nueva API o crear nueva key y seleccionamos la red que queremos utilizar. En este caso, vamos a seleccionar la web3 API. y podemos dar un nombre, en este caso vamos a poner testing de pruebas y creamos. Automáticamente ya tenemos aquí nuestra primera API key, que es lo primero que nos aparece aquí, este dato que está aquí. Y tenemos también los endpoints de la red, que en este caso los endpoints de la red son las redes que podemos utilizar. En este caso, en el lado de Ethereum, podemos utilizar la red mainnet, o podemos utilizar las redes de pruebas Robstan, Coban, Rigby, Godly y Sepolia. Es decir, simplemente si queremos utilizar una... O crear una aplicación descentralizada que funcione en la mainnet, nosotros debemos copiar este endpoint que está aquí, que si nos damos cuenta, esta API Key es la misma que se repite aquí, para que nuestra aplicación descentralizada se conecte automáticamente a lo que es Infura y esos datos que comparte tu aplicación con Infura se vayan o vayan dirigidos a la red main. En el caso de que queramos utilizar alguna otra red, simplemente seleccionamos. y automáticamente fíjense que la dirección cambia, en este caso, rekenv-info.io. Eso significa que todo lo que hagamos con nuestra Dapp va a ir dirigido a la red rekenv. Por supuesto, esto es simplemente para el caso de Ethereum. También podemos funcionar con otras redes. Por ejemplo, en este caso podemos llegar a utilizar las redes Polygon, Optimum, Arbitrum o Parp. En este caso si seleccionamos Polygon, podemos agregar y agregar la red Mainnet, pero fíjense que también podemos agregar la red Moonbyte, que es la red de testnet. ¿Qué sucede en este punto? Que para ello, Infra nos pide un agregado, un addon sobre la plataforma. Si vamos allí, nos está pidiendo entonces que seleccionamos un plan de pago, en este caso puede ser el plan más sencillo, que en este caso es el de Developer, para llegar allí. poder agregar esta situación con el correspectivo pago que nos están solicitando para poder activar esta función. Sin embargo, en este caso simplemente nos vamos a manejar con Ethereum y vamos a volver atrás. Podemos ver aquí cómo entonces tenemos estas cuatro opciones, pero estas cuatro opciones son pagas. Debemos llegar y cancelar una pequeña suscripción para poder utilizarlas. Y también tenemos acceso a otras redes del tipo Web3, como sería en este caso Near, Aurora y la red Starnet. Sin embargo, tanto lo que es Avalanche.js, Nier, Stagne y Aurora, que son redes que están disponibles como podemos ver aquí Todas estas redes están en lo que se llama pruebas, eh... Betas privadas Es decir se nos presta el servicio para este tipo de redes, pero debemos estar conscientes de que hay cosas que pueden ir bastante bien o otras que pueden ir bastante mal debido a que están en desarrollo dentro de lo que sería la infraestructura de Infura. Si pasamos a Settings, podemos ver aquí que podemos llegar y cambiar el nombre de nuestro proyecto o borrarlo. Y también podemos elegir la parte de seguridad, viendo que en el principio tenemos aquí nuestra API. y nos dice aquí muy claramente, mantenga su APK en secreto. Esto nunca debe ser legible para humanos en tu aplicación. ¿Por qué estas vertencias dentro de la APK? Bueno, la APK es muy importante porque es la interfaz o el medio que te permite llegar y conectar tu aplicación con lo que son los servicios de Infura. ¿Qué sucede aquí? Que si alguien tiene tu APK, Esta persona tiene acceso a tu aplicación y todo lo que ello hace. Por lo tanto, la APK siempre debe ser bien protegida. o en este caso, ofuscada de alguna manera para que cualquier persona que pueda tener acceso a tu código o de repente esté incluida dentro de tu aplicación, no pueda leerla directamente. Es decir, debes cuidarla como si fuese tu clave privada de criptomonedas, como si fuera la clave privada de tu monedero, porque esta APK es la llave secreta para acceder a todo tu sistema de interacción con lo que sería Infura y tu aplicación. Aquí también tenemos otros requerimientos, como sería un secret, en el caso de que quieras agregar una clave adicional, o un sistema de JWT, que en este caso utiliza un sistema de claves públicas y privadas para poder llegar y agregar una seguridad extra a lo que sería tu APK. Finalmente también tenemos la parte de Project Sharing, que en este caso nos permite llegar y decir, mira, yo quiero compartir mi proyecto, quiero que estas personas puedan colaborar con mi desarrollo y simplemente nos pide aquí en la parte de fuera, es que agregamos un correo electrónico y seleccionamos el rol. administrador o contribuidor. ¿Por qué solamente dos roles si yo había mencionado en un principio tres? O sea, dueño, administrador y contribuidor. Bueno, la persona que crea el proyecto es el dueño. Este permiso no cambia en ningún momento. O sea, la persona que abrió el proyecto es la persona que va a ser el dueño de ese proyecto todo el tiempo. Luego, simplemente nos quedaría entonces los roles de administración y contribuidor. Simplemente agrega el correo, seleccionas el rol y compartes el proyecto para que esta persona pueda colaborar contigo sin mayores dificultades dentro de lo que sería el desarrollo de tu aplicación descentralizada. Como puedes ver, es bastante sencilla. la parte administrativa que nos permite infurar, lo que sería la APK, y de todo lo que sería la parte que nos permita conectarnos a sus servicios y todo lo demás. Aquí también tenemos un stats, que en este caso, los stats lo que nos dice es cuántas veces estamos haciendo los requests a lo que sería la parte de infura. Es decir, cada vez que hagamos una acción dentro de nuestra aplicación descentralizada, nos va a decir cuántas veces hemos hecho una acción. Y aquí también tenemos un reporte de la parte de infura, que nos dice cuántas veces hemos hecho una acción dentro de nuestra aplicación descentralizada. Y aquí también tenemos un reporte de la parte de infura, que nos dice cuántas veces hemos hecho una acción dentro de nuestra aplicación descentralizada. Y aquí también tenemos un reporte de la parte de infura, que nos dice cuántas veces hemos hecho una acción dentro de nuestra aplicación descentralizada. Y aquí también tenemos un reporte de la parte de infura, Esa acción o request se va a ver reflejada dentro de este total, que en este caso es el volumen total de request en las últimas 24 horas, y también nos va a decir qué método se ha utilizado y cuántas de esos requests han ido a la red. Toda esa actividad se puede ver aquí, dentro de lo que sería la parte de stats. También podemos ver las transacciones que se realizan. En este caso, está todo el proceso de cómo se realizan las transacciones, pero en este punto, este es un servicio que se requiere directamente a Infura. Infura manejaría toda esta parte directamente, evitando que, en caso de que estés haciendo una transacción o una operación, esto simplemente se pierda. Y Infura, con esta función, lo que hace es que simplemente agarra todas esas transacciones y maneja las mismas de una forma más inteligente para evitar que la interacción de tu DApp no sea la correspondiente o no sea la mejor en este caso. Finalmente, tenemos la sección de explorador, que en este caso es un explorador para la red IPF, que nos permite crear proyectos y hacer almacenamientos de datos dentro de la misma. Por ejemplo, en este caso, IPFS. Vamos a seleccionar aquí Testing. Y en este caso ya tenemos nuestro proyecto. Fíjense que nos está diciendo que tenemos un total de 5GB de almacenamiento gratuito. No hay tamaño de archivos restringido. Y podemos bajar 5GB de datos al mes o subir 5GB de datos al mes. Este es nuestro plan básico. Si queremos aumentar nuestro plan, podemos llegar y comprar más espacio para que entonces podamos llegar y seguir aumentando la capacidad de este sistema. ¿Para qué se utiliza en este punto el sistema de IPFS? Bueno, si queremos llegar y nuestra aplicación descentralizada necesita almacenar información de las interacciones o de los usuarios, IPFS es una opción bastante potente para llegar y almacenar toda esa información de forma descentralizada. De manera que cada usuario tenga su propio espacio de almacenamiento dentro de lo que sería esta red descentralizada de almacenamiento todos esos datos van a ir unidos a lo que sería la interacción de ese usuario, es decir... todos los usuarios pueden leer la información que ha subido al IPFS por medio de tu aplicación descentralizada. Ninguno de los otros usuarios puede leerla porque para poder realizar esta acción, necesitas de lo que serían las claves privadas que se almacenan dentro del monedero de cada persona. Es decir, es la mejor forma, en este caso, de almacenar datos dentro de lo que sería una nube porque mantiene privados los datos de cada uno de sus usuarios. Así, como pueden ver, todas las opciones que Infura nos ofrece son bastante potentes, bastante flexibles para llegar y generar aplicaciones descentralizadas en este caso. Simplemente hacer una acotación y un hincapié en este punto. Y vamos a la parte de aplicación. Fíjense que aquí está nuestra aplicación, crear 18. Y vamos a manejar la key. Esta, como se puede ver, es la que está en la parte de abajo. es nuestra APK y ese es el dato que debemos llegar y tomar para llevarlo a lo que sería nuestra aplicación descentralizada. Esto lo veremos un poco más adelante para que vean cómo podemos utilizar este dato dentro de lo que serían nuestras aplicaciones y así pueden interactuar con la blockchain de una forma bastante más sencilla, utilizando códigos con Python o con JavaScript, que en este caso serían los dos lenguajes de programación más utilizados en este sentido para generar aplicaciones descentralizadas. ¡Gracias! o aplicaciones centralizadas que requieran de cierta utilidad o funcionamiento con lo que serían las aplicaciones blockchain. En sus pantallas tenemos a Alchemy. Alchemy, al igual que Infura, es un servicio de desarrollo para aplicaciones web 3 descentralizadas que nos permite crear APIs que nos faciliten la integración de nuestras aplicaciones centralizadas con lo que sería el universo blockchain de la web 3. ¿Qué diferencia hay Infura de Alchemy? El mercado de las aplicaciones centralizadas es el mismo mercado que el mercado de las aplicaciones blockchain. Pues bien, principalmente la diferencia entre Alchemy y Infura es la capacidad o las opciones de redes que tenemos activas dentro de Alchemy. Alchemy en este caso, soporta bloques como Ethereum, Solana, Optimis, Polygon, Arbitrum, Crypto.org, Starnet y Astar. Es decir, tenemos un mayor abanico de aplicaciones de blockchain dentro de lo que sería Alchemist, que podemos utilizarla para llegar y crear nuestras propias aplicaciones. Ahora bien, al igual que Infura, podemos llegar y utilizar todo este poder a través de Web3 APIs, que fácilmente podemos ir creando cuando accedemos a la plataforma. ¿Cómo podemos acceder a la plataforma? Pues bien, simplemente vamos a la parte de Login In, y aquí tenemos la capacidad para llegar y suscribirnos. utilizando la cuenta de Google o simplemente suscribirnos con una parte de email y password. En este caso vamos a utilizar la suscripción por Google. Como pueden ver, la interfaz es bastante sencilla, bastante distinta también a lo que sería, a lo que vimos anteriormente en Infura. Pero podemos ver que ya tenemos el dashboard, tenemos aquí ya una aplicación de prueba creada. En este caso, como no hemos tenido ninguna interacción, simplemente nos aparece que no hay ninguna información que mostrar dentro que sería el dashboard. Ahora bien, si queremos crear una aplicación, es decir, si queremos crear nuestra propia API para llegar y utilizarla dentro de lo que sería nuestra aplicación descentralizada, eso es bastante sencillo. Simplemente debemos ir aquí a Create App y ofrecemos un nombre para la misma. En este caso vamos a poner Testing también y vamos a hacer una descripción. Testing de API. En este caso la descripción es una aplicación de prueba para el desarrollo y vamos a elegir la cadena. En este caso nos da opciones para elegir las cadenas Polygon, Solana, Astar, en este caso Astar Mainnet o podemos elegir Polygon, Polygon Mumbai o podemos seleccionar Solana y Solana con las dos redes que tiene. Empezamos a seleccionar Ethereum y vamos a seleccionar la red Governing. Creamos la aplicación. y ya estamos dentro de lo que sería el dashboard de nuestra aplicación recién creada utilizando la red Governly tal como podemos ver aquí desplegado dentro de lo que sería el dashboard. Ahora bien, ¿dónde está nuestra APK? ¿Cuál es nuestra APK en este caso? Simplemente vamos aquí, vemos detalles y... empezamos a ver todo lo que es la información. En este caso, tenemos las unidades de computación, en este caso ha sido 0 porque el proyecto ha sido recién creado. También tenemos la respuesta media, el success, la capacidad, luego el uso de las redes en este caso, la cantidad de requests que se han realizado, el éxito de esas requests, el total de requests en las últimas 24 horas y las requests que han sido marcadas como inválidas. En este caso, simplemente, si queremos ver la key, vamos aquí a View Key, y allí está nuestra API Key para interactuar con lo que serían los servicios de archiving y todo lo que sería el poder de esta red dentro de lo que sería Ethereum, Ethereum Guaranty, en este caso. Fíjense que aquí está nuestra API Key, nuestro employee, en este caso, utilizando el protocolo HTTPS, y el employee utilizando WebSockets. Aquí están las capacidades de cómo podemos llegar y utilizar el SDK o las herramientas de desarrollo de Archemix, utilizando lenguaje de programación como JavaScript, una consola o simplemente podemos utilizar Python. En este caso, podemos utilizar Python con V3 para llegar y hacer la conexión y podemos ver que hay diferentes partes de uso, o sea, códigos de uso para llegar y utilizar todo el poder de esta aplicación. También podemos utilizar en Go, que es el lenguaje de Google, un lenguaje bastante potente en este caso. Pero como pueden ver, hay varias opciones de lenguaje que podemos utilizar para llegar y realizar todas estas opciones. Simplemente llegamos y tenemos que tener cuidado de copiar esta aplicación, esta APK, y colocarla en los programas de prueba o en nuestra aplicación para llegar a utilizar todo este potencial. Y cerramos aquí. Podemos ir entonces a tener lo siguiente. Podemos tener. el TH de prueba, podemos agregar un molde de aero y la parte de seguridad. En este caso, la parte de seguridad es prácticamente la misma situación que hemos visto anteriormente con la parte de fuera. Podemos llegar y permitir direcciones de uso que están permitidas para la aplicación, dominios que estén permitidos o direcciones IP. En este caso, podríamos verlo como una especie de muro de fuego. nos permite controlar, mira, estas son las direcciones que pueden interactuar con tu aplicación o estos son los dominios o estas son las direcciones IP. También podemos agregar un monedero que en este caso nos dirige a recargar la parte de Metamask y también podemos llegar a agregar lo que serían ETH de pruebas. Fíjense que aquí ya estamos en el govern de Faunet. Fawcett, digo, que en este caso el Werly Fawcett simplemente nos permite, vamos a hacer aquí la conexión al Chemi para probar, en este caso fíjense que ya estamos conectados, conectados como José, y tenemos que es un Fawcett para Werly, simplemente copiamos la dirección de nuestro monedero, que ya está configurado para Werly, vamos a enviarlo, denme, y automáticamente nos enviará la totalidad de 0.25 gobernos a nuestro monedero. En este caso podemos llegar a mandarlo a la red Mumbai. Vamos a hacer aquí, para requerir lo que serían toques de prueba, copiamos la dirección, hermetic. En este caso ya tengo aquí la red Mumbai activa. Vamos a esperar un momentico a que se haga la operación. a que la operación se haga efectiva. Y aquí está. Ya se hizo efectiva la operación. Ya tenemos 1.5 Matic en la red Moonbyte, que es la red de prueba de Póligo. ¿Y de qué nos sirve esto? O sea, ¿para qué hemos realizado esta operación dentro de lo que sería un Faucet? Bueno, las interacciones que se realizan en redes como Mumbai, Goerli, que son redes testnet, si bien no necesitan dinero real, si necesitan de tokens de esas redes para que puedan funcionar. Recordemos que estas redes funcionan tal cual como funcionaría la red Mainnet de cada una de estas redes, por lo menos en este caso Ethereum Mainnet, Goerli funciona tal cual. Es decir, necesitamos pagar las comisiones de esas redes que si bien... Lo hacemos con ETH Go Early o ETH Go como se llama. Este token no tiene ningún valor económico como tal, pero necesitamos pagarlas para que las acciones se puedan realizar. En este caso es tratar de mantener lo mayor, lo mejor posible, lo que sería la actividad o cómo funciona todo lo que sería la red como tal. Esto del Fawcett nos ayuda a tener dinero en nuestros monederos que aunque sea de la red testnet, podemos utilizarlo para llegar y hacer las diferentes aplicaciones o las diferentes interacciones con estas redes. Ahora bien, cerremos aquí un momento y volvamos aquí a Archemi. Ya podemos ver aquí entonces todo lo que es el dashboard de Archemi. Y ya podemos saber qué estas cuatro opciones nos ofrecen, que en este caso, seguridad, cómo agregar un monedero, cómo agregar toques de pruebas para nuestro monedero y la que, en este caso, es para llegar a hacer las interacciones con nuestras aplicaciones. Aquí en las aplicaciones, exploradores. Aquí en el explorador tenemos todo lo que sería la actividad que se ha realizado dentro de nuestra aplicación descentralizada. Aquí tenemos el compositor. El compositor es simplemente... una utilidad que nos permite crear requests especializados. En este caso podemos utilizar las diferentes cadenas que Alchemy nos ofrece de soporte, podemos utilizar las diferentes redes y los diferentes métodos que nos permiten acceder a la información que está dentro de lo que serían las capacidades de respuesta del request de Alchemy. En este caso podemos llegar y podemos, por ejemplo, pedir el bloque o la chain ID. de una cadena, en este caso la cadena sería la red ethereum en la red de product worldly y mandamos nuestros requests. En este caso, mandamos un request. aquí está el request enviado, pero la respuesta que recibimos es una respuesta de error porque nos da aquí el mensaje, en este caso el mensaje es que el origen dashboard.archive.com no es un origen que esté permitido. Esto tiene que ver mucho con la parte de seguridad que acabamos de ver hace un momento. Simplemente permitimos el origen, en este caso la dashboard.archive.com, y ya con ello podemos llegar y empezar a hacer los requests en este caso. También tenemos acceso a lo que sería la main pool, un observador de la main pool, y notificaciones por las diferentes actividades que podemos estar realizando con nuestra aplicación descentralizada. En este caso, podemos revisar la actividad de NFT, la actividad de direcciones, las notificaciones de transacciones que hayan sido dropeadas o las que hayan sido minadas. Finalmente, también tenemos otras opciones que HMV nos ofrece, que en este caso son APIs avanzadas para transferencias, generación de metadata para los tokens, balance de tokens, allowance, lo que es HMV Web 3, Smart Web Sockets, Trace API, Debug API y NFT API. Importante estas dos. que son APIs de desarrollo bastante potentes, que nos permiten llegar y mejorar, o debugging, en este caso, las aplicaciones esterilizadas que estemos haciendo. Esto es muy importante porque un papel o un punto que ningún desarrollador debe dejar de lado es el debugging y el reconocer cuáles son los errores y cómo solucionarlos dentro de lo que serían las capacidades de desarrollo de la aplicación. Esto con el fin de mantener las aplicaciones bastante seguras evitar este triste episodio que puedan llevar a hackers o a doctores maliciosos a llegar y traspasar la seguridad de nuestras aplicaciones y poder obtener así una ganancia bastante de una forma bastante maliciosa en este caso. Entonces como pueden ver esto es Archemy Es bastante sencillo crear una cuenta aquí y empezar a utilizar su potencial.