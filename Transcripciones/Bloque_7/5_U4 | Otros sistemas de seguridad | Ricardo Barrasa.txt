Speaker 0 | 00:21.590
El masking, data masking o masking de datos, es una técnica informática usada para enmascarar datos de tal forma que podamos proteger la información sensible que maneja una aplicación en ambientes de producción. Generalmente, esta técnica busca sustituir los datos con versiones compuestas de los mismos por medios que incluyen hashing o diferentes procesos informáticos que permitan transformar dicha data en una que directamente no dé acceso a los datos que desean ser protegidos. Esto resulta de enorme utilidad para distintas actividades como el desarrollo de software, realización de pruebas o, por ejemplo, la minería de datos. Estas son algunas de las principales razones por las que las empresas utilizan el data masking. Primero, para proteger los datos de proveedores externos. El intercambio de datos con vendedores externos, consultores y otros es normal, pero ciente información debe mantenerse confidencial. Segundo, para proteger los datos de los usuarios externos. Error de operador. Las empresas confían en sus expertos para tomar buenas decisiones, pero las violaciones de datos a menudo son el resultado de un error del operador y las empresas pueden salvaguardarse con el masking de datos. Tercero. No todas las operaciones requieren el uso de datos totalmente reales y precisos. Hay muchas funciones dentro de un departamento de TI que no necesitan datos reales, por ejemplo, algunas pruebas y uso de aplicaciones. Cuarto. Definir el data masking significa comprender el importante papel que desempeña la Estrategia General de Seguridad de Datos de la empresa. Y quinto, el objetivo principal del masking de datos es proteger datos complejos y privados en condiciones en los que los datos puedan ser notorios para alguien sin su permiso. Básicamente existen tres tipos de masking que son el estático, este se refiere a un proceso en el que los datos importantes se enmascaran en el entorno de la base de datos original, el contenido se duplica para crear un entorno de más amplio acceso y luego se pueden compartir con proveedores externos u otras partes necesarias. Los datos se enmascaran y se extraen de la base de datos principal, debidamente protegida y donde se encuentran los datos reales, y se trasladan a otra base de datos de servicio, donde ya están enmascarados. Si bien el data masking estático puede ser un proceso necesario para trabajar con consultores externos, su aplicación no es ideal. Esto se debe a que durante todo el proceso de masking de datos, para una base de datos duplicada, se extraen datos reales que pueden cejar una puerta trasera abierta que fomenta las violaciones. Después tenemos el dinámico. En este caso, el proceso de masking permite a los departamentos de TI proteger los datos en tiempo real. Esto significa que nunca abandona la base de datos principal, sino que, en caso de requerirse una información, el sistema enmascara los datos según el usuario y su nivel de exceso que ha solicitado la información, haciendo verificación en todo momento de este proceso y reduciendo la superficie de ataque del sistema. Para ello, se necesita un sistema de masking. Una herramienta de masking dinámico encuentra y enmascara ciertos tipos de datos confidenciales utilizando un proxy inverso, un recurso software que se encarga de revisar toda la información de forma totalmente transparente y que permite al sistema enmascarar los datos según se requiera. Así, solo los usuarios autorizados podrán ver los datos auténticos. El tercer tipo que tenemos lo vamos a denominar sobre la marcha. Al igual que el masking de datos dinámico, el masking de datos sobre la marcha ocurre bajo demanda. En este tipo de masking de datos se produce un proceso de extracción de carga de transformación donde los datos se enmascaran en la memoria de una aplicación de base de datos determinada. Esto es particularmente útil para compañías ágiles enfocadas a una entrega continua. En general, la selección de una estrategia de masking de datos debe tener en cuenta el tamaño de la organización. así como la ubicación y la complejidad de los datos que desea proteger. Existen diferentes técnicas de making de datos, entre las que podemos mencionar el key masking. Devuelve los datos enmascarados con resultados deterministas para los mismos datos de origen. El masking será siempre el mismo para cada valor de entrada. Segundo, el random masking. Una columna configurada para el random masking producirá resultados aleatorios prior a configuración de un diccionario que contiene los valores de sustitución de todos los datos de origen. Su uso requiere una tabla relacional que contenga los datos de sustitución así como un número de serie para cada fila de la tabla. Tercero, sustitución. Con esta regla de masking se reemplaza una columna de datos con datos similares, pero no relacionados que hemos definido con anterioridad. Cuarto, formatos especiales. Los formatos especiales son útiles para enmascarar datos identificativos como el número de asegurada social, tarjetas de crédito, números de teléfono, URLs o cualquier otra cosa. Al aplicarlos, cambiamos estos datos por valores realistas en el mismo formato, pero no son válidos. Quinto, masking de gráfico. Son técnicas usadas para ocultar la identidad de una persona en fotos y demás elementos visuales, en plataformas que hacen uso de este tipo de recursos, por ejemplo, la plataforma KYC. Sexto, masking de documentos. Son técnicas usadas para ocultar información sensible de documentos y demás elementos electrónicos dentro de una plataforma. Adicionalmente, la importancia de la herramienta de masking de datos se ve resaltada por su estrecha relación con la seguridad, en la que deben de tener en cuenta los siguientes elementos. Primero, Cumplimiento de la normativa de privacidad. Las soluciones de masking de datos contribuyen a garantizar el cumplimiento de estas leyes reguladas sobre la protección de datos de clientes, proveedores o, por ejemplo, de los mismos empleados de la organización. Su función evita a la empresa elevadas multas en caso de posibles inspecciones. En este apartado, la seguridad también está vinculada a la obligación moral de toda organización de proteger los datos privados, en particular, todos los sensibles. Segundo, evitar el riesgo de fuga. El masking de datos bloquea la exposición de datos sensibles de producción a usuarios no autorizados reduciendo el riesgo de filtraciones de datos críticos por lo demás bastante frecuentes como los robos o ataques cibernéticos. Tercero, en otro orden cabe destacar que la nube constituye una gran oportunidad para reducir costes de infraestructura pero al mismo tiempo entraña nuevos riesgos de seguridad para los datos. Se trata en suma de aplicar políticas de seguridad de datos que garanticen que los datos que residen en la organización se encuentran debidamente protegidos. En este aspecto, el data masking debería formar parte de la rutina de trabajo de todas las organizaciones que manejan datos sensibles, un concepto variable en cuanto a su confidencialidad, pero que sin embargo, a nivel legal, tiene las pautas muy definidas en cuanto se trata de información de tipo personal. El data masking también ayuda a ahorrar costes en muy distintas situaciones, como la pérdida de datos, fugas o filtraciones, robo, o por ejemplo, la imposibilidad de llegar a cabo proyectos que impliquen un nivel de seguridad que no tengamos y que exija la implementación de herramientas de data masking. En este sentido, podríamos dejar de ganar un dinero o tener pérdidas precisamente por el mismo motivo, sin olvidar las importantes acciones económicas que puede llevar a incumplir la normativa de privacidad. En general, las normas de datos La eficiencia se logra con una adecuada gestión de los datos en terrenos clave, como su calidad y seguridad, y nos ayudará a conseguir una reducción de costes gracias a la eficiencia de la gestión y los mismos procesos operativos. Con la introducción de estándares de privacidad internacionales cada vez más estrictos, las organizaciones tienen una mayor responsabilidad de proteger los datos personales de sujetos que incluyen clientes, proveedores y empleados. Por ejemplo, en la Unión Europea, las multas por el incumplimiento del Reglamento General de Protección de Datos pueden ascender a 20 millones de euros o al 4% de la facturación global, el mayor de ambos. Cumplir con esta legislación lleva a las empresas que van a solicitar expreso y en equívocos consentimiento para la utilización de los datos, especificar qué datos se están utilizando y cómo se están tratando, para qué y para quién es la persona responsable de los minutos. Por otro lado, aunque en Estados Unidos y Japón están muchos pasos por detrás de Europa en cuanto a la protección de datos, la primera ley de privacidad del consumidor entró en Estados Unidos en el 2020 y la ley de protección de datos personales de Japón ya ha adoptado una serie de enmiendas que planean entrar en vigor en 2022. Es por tanto imprescindible ceñirse las normas vigentes y ante todo jamás eludir las obligaciones impuestas por motivos tanto éticos como legales. Las malas prácticas podrían poner entre dicho la reputación de su negocio y sumar demandas multimillonarias que podrán en peligro la continuidad de su empresa. La obfuscación de datos es una forma de enmascaramiento de datos donde los mismos se representan en formas complejas con el fin de evitar su comprensión. De esta manera, la obfuscación funciona como una forma de cifrado que busca hacer ininteligibles o confusos los datos que son tratados en esta técnica. En informática, la obfuscación es conocida como una medida de seguridad por oscuridad, es decir, una medida de seguridad que busca ocultar algo sensible por medio de una técnica compleja que puede ser rota con análisis de la fuente de esa información. La obfuscación de datos tiene varios objetivos, entre los que podemos mencionar, primero, agregar seguridad. Si queremos proteger datos sensibles, incluso luego de un acceso no autorizado a los mismos, la obfuscación puede ayudarnos a esto. Segundo, dificultar la ingeniería inversa del software. El código obfuscado suele ser más complejo de decompilar y, por tanto, más complejo de saber cómo funciona y generar funciones parecidas. Tercero, hace que las firmas estáticas utilizadas por los vendedores de antivirus no puedan detectar el malware, ya que estas firmas se basan en secuencias de bytes específicas en el binario. Cuarto, protección de la propiedad intelectual. Quizás no quieres que tu competencia copie cierto algoritmo que has utilizado. Un buen ejemplo de estos objetivos lo podemos ver en la obfuscación usada en el código, con el fin de que si un atacante obtiene acceso al código fuente de un programa, al estar obfuscado el código, Entender el mismo sea extremadamente complejo para todos los agarcantes y averiguar cómo funciona, protegiendo esta protección intelectual. La fuscación de datos busca aplicar esta técnica en las variables, constantes, funciones y estructuras que forman parte de un programa. Entre estas técnicas podemos mencionar el constant blending, una técnica que busca sustituir los valores de las constantes por medio de funciones de manipulación de bit dentro de las funciones que usan dichas constantes, o bien por medio de funciones XOR. apuntando a punteros con valores aleatorios. La idea es que la constante no sea usada directamente y su valor se ajuste a la necesidad real de la función en el momento en el que sea llamada, o sea, en tiempo de ejecución. Segundo, cambio de tipo de variables. Cambiando la codificación de las variables se busca ocultar el valor original de la variable. Por ejemplo, podemos cambiar la codificación de un string por su valor equivalente en otra codificación, por ejemplo, una codificación base64. Tercero, conversión de datos estáticos en procesos. Consiste en convertir un dato en un proceso que generará este mismo dato en tiempo de ejecución. Cuarto. Cambio del tiempo de vida de las variables. Esta técnica consiste en convertir variables globales en variables locales, las cuales incluso pueden ser manipuladas dentro de esta función o funciones externas. Hay también un largo etcétera de manejo de arrays, donde puedes juntarlos todos, puedes expandirlos, puedes cambiar la longitud o puedes cambiar el número de líneas o el número de columnas, todo con el mismo fin. Muchas de estas funciones son bastante complejas de aplicar. Algunas generan errores de compilación. o agregan complejidad adicional al código generado, que hace más compleja su depuración. De ahí que deba usarse de forma limitada y en secciones de código que se consideren críticas para mantener la seguridad de un sistema y bajo un estricto desarrollo y revisión del código. Tenemos diversas técnicas de obfuscación del diseño. El primero podría ser el class merging. Esta técnica consiste en la unión de una o más clases de un programa en una sola clase. Después tenemos el class splitting. Esta técnica consiste en dividir una clase en un determinado programa en varias clases. Y por último tenemos las técnicas de obfuscación de flujo de control. Consiste en una serie de transformaciones que alteran el flujo de ejecución de un programa. El flujo de ejecución de un programa se puede representar por un grafo de control de flujo en el que los nodos son los bloques básicos de ejecución del programa. y las aristas son los altos entre bloques básicos de ejecución, que son los conjuntos de instrucciones que se ejecutan secuencialmente, en los que la primera instrucción es el único acceso al bloque y la última instrucción es la única de salida. Esto es una de las técnicas más complejas de obfuscación hasta el punto que los Smartware y los Ransomware avanzados hacen uso de la misma para evitar que las técnicas de heurística y análisis de software de herramientas avanzadas de seguridad y antivirus que existen en la actualidad los detecten. El nivel de este tipo de técnicas es tal... que su uso correcto requiere de un amplio conocimiento de las características de los controles de flujo de los kernels, compradores y librerías. Uno de los métodos más sucesados en este punto es el de null code, una técnica en la que se agrega código al programa que al final no hace nada, pero que está ahí para disfrazar funciones vitales del programa evitando ciertas técnicas de análisis. Desde la creación de las máquinas virtuales, la virtualización de código como método para la obfuscación es una viabilidad. Obfuscación VM-Based, como se conoce en inglés, es un método avanzado de obfuscación. La técnica consiste en reemplazar instrucciones del programa con instrucciones virtuales con las que el atacante no está familiarizado. Posteriormente, estas instrucciones serán traducidas a código de máquina nativa en tiempo de ejecución para ser ejecutado por el hardware. En un principio, este tipo de tácticas podían ser fácilmente detectadas debido a la enorme cantidad de recursos que podían requerir para su funcionamiento. Pero con la llegada del hardware, con funciones de virtualización incluidas, estas técnicas se han hecho cada vez más comunes en el malware y en el software de uso común. En el mundo de las criptomonedas, este tipo de técnicas también son usadas, siendo el uso más conocido el que Monero le da dentro del algoritmo RandomX, el cual ejecuta una máquina virtual sobre el computador para realizar la minería de datos. Todo esto está cifrado con un algoritmo AES-256. Las organizaciones a menudo necesitan copiar datos de producción almacenados en este espacios de datos hacia base de datos de no producción o de prueba. Esto se realiza para completar. de manera realista la prueba de funcionalidad de la aplicación y cubrir escenarios en tiempo real o en casos de prueba para minimizar errores o defectos de producción. Como resultado de esta práctica, un entorno no producción puede convertirse en un blanco fácil para los ciberdelincuentes o empleadores malintencionados que buscan datos sensibles que pueden ser expuestos o robados. Debido a que un entorno de no producción no está tan estrechamente controlado o administrado como el entorno de producción, podría costar mucho dinero para que las organizaciones el daño a la reputación o al valor de la marca en caso de que ocurra un incidente o una brecha de datos. Los requisitos reclamatarios son otro factor clave para la obfuscación de datos. Por ejemplo, el estándar de seguridad de datos de la industria de tarjetas de pago, el PCI DSS, alienta a los comerciantes a mejorar la seguridad de los datos de las tarjetas de pago con la adopción de medidas consistentes en seguridad de datos que proporcionan una base de requisitos técnicos y operacionales. PCI DSS requiere que los datos e información de los comerciantes no se utilicen para pruebas y desarrollo. La exposición adecuada de estos datos, ya sea por accidente o por un incidente malicioso, podría tener consecuencias graves. El anonimato es el carácter o la condición de anónimo, es decir, el hecho de mantener una entidad de una persona o entidad completamente desconocida para el público. Esto puede ser simplemente porque no se haya pedido su identidad como en un encuentro ocasional entre extraños, o porque la persona no puede o no quiere revelar su identidad, por motivos de seguridad o simplemente porque no es su deseo hacerlo. El anonimato ha sido una práctica que ha estado en la historia humana desde la antigüedad, especialmente en los momentos históricos donde la vida de esa persona estuviera en especial riesgo, bien sea porque sus acciones eran de peligro para el poder establecido, o simplemente porque contravenieran las creencias de la sociedad del momento. En la actualidad, el anonimato es una característica que muchas personas buscan en su vida. en el mundo digital, por una razón, privacidad. El mundo digital actual permite a las instituciones acceder a grandes cantidades de información sobre nuestra vida y actividades, hasta un punto que saben más de nosotros que nosotros mismos y que frente a esa realidad distópica, el anonimato y el pseudoanonimato se erigen como una de las mejores herramientas para contrarrestar a las empresas. empresas hábidas por nuestros datos para monetizarlos a su favor. Básicamente buscamos usar estos dos conceptos y herramientas para contrarrestar que las empresas nos transformen en meros productos y fuentes de información para su beneficio. En el mundo digital existen gran cantidad de herramientas para ayudarnos a mantener nuestra privacidad, usando para ello el anonimato o el pseudoanonimato. Herramientas que en su mayoría fueron creadas durante la primera y segunda CryptoWorld, entre 1990 y 2010. Por ejemplo, los remailers fueron una de las herramientas más usadas para mantener el anonimato de los usuarios de correo electrónico, con el fin de proteger su identidad, y de hecho, su efectividad es tal que aún en día se siguen usando ampliamente. Después de todo, los remailers se encargan de llevar tu correo por distintos servidores de correo con el fin de reescribir la metadata de los mismos hasta llegar a su destino, sin pizca alguna de datos personales digitales en ellos. Otros buenos ejemplos de anonimato se pueden ver en los Proxys Chain, en SSH Tunneling, en el SOC 5 Tunneling, en la Fuscación IP, en las VPNs... Todo esto para hacer que tu conexión web no pueda ser directamente rastreada hacia tu dirección IP real. permitiéndote usar pseudónimos en redes como IRC o Usenet de forma segura. Junto a esto, la creación de herramientas como Tor o I2P habilita nuevas formas de privacidad y anonimato online que pueden garantizar cierto nivel de seguridad, especialmente si usamos dichas herramientas de forma correcta. Sin embargo, con la mayor masificación de Internet, la llegada a la web 2.0 y ahora la 3.0, es necesario dar un paso más allá y transformar estas herramientas en un estándar para proteger nuestra privacidad. ¿Qué derecho tiene una empresa como Microsoft de rastrear, analizar, almacenar y vender la actividad que realizas con tu ordenador o sus servicios? Después de todo, estás pagando una suscripción por sus servicios o por usar su sistema operativo. Y en definitivo, ese acceso que te dan no es gratuito en su mayoría, porque incluso en los servicios gratuitos la publicidad está ahí siempre presente. Aquí usamos el nombre de Microsoft y pensarás que es la peor empresa de este sentido, pero empresas como Meta, Alphabet y Apple. no se quedan atrás. Seguramente dirás que el software libre puede protegerte de ello, pero incluso en ese ambiente ya comienzan a verse prácticas parecidas. Por ejemplo, en Audacity un conocido desarrollador de software libre comenzó a ejercer este tipo de prácticas y aunque se ha demostrado que son datos de uso anonimizados, otros proyectos pueden no tener un espíritu en esa línea. Por curioso que te parezca, los gobiernos del mundo parecen no estar muy de acuerdo con que podamos mantener el anonimato o siquiera el sedo de anonimato en la web. Y hay muchos aspectos de nuestra vida. Después de todo, a ellos les mueve el control sobre la población y por ello podemos ver casos tan descabellados como escribir en una ley una cosa y hacer otra totalmente distinta. Por ejemplo, en la Unión Europea, el derecho al anonimato en Internet está contemplado en la legislación europea. y reconoce el derecho fundamental a la protección de datos, la libertad de expresión y la libertad de impresión. La Carta de Derechos Fundamentales de la Unión Europea reconoce el derecho de todas las personas a la protección de datos personales que le concierne. El derecho a la intimidad es ahora esencialmente el derecho del individuo a tener y mantener el control sobre la información que le concierne. Sin embargo, los Estados miembros buscan mil y una formas para restringir este derecho, especialmente con el uso de criptomonedas, abogando por la aplicación de leyes o reglamentos que directamente contradicen la Carta de Derechos Fundamentales. Dicho esto, el tema de legalidad sobre el anonimato y sudo anonimato es un tema especialmente cambiante y que toda empresa e individuo debe tener presente cuando realiza actividades frecuentes en Internet.