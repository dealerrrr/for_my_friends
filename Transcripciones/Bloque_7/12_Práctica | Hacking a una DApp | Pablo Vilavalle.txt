Speaker speaker_not_detected | 00:14.102
Buenas,

Speaker 0 | 00:14.602
mi nombre es Pablo y en este vídeo os voy a demostrar cómo un atacante, aprovechándose de una vulnerabilidad de la parte del cliente de un DEX, es decir, de un exchange descentralizado, podría hacer que la víctima, en lugar de hacer un simple swap de un token a otro, como se suele hacer en este tipo de aplicaciones, lo que haga sea que transfiere todos los fondos de la billetera de la víctima a la billetera del atacante. Bueno, para ver cómo funciona este tipo de vulnerabilidad y qué es lo que tendría que hacer el atacante para explotarla, hemos preparado un pequeño ejemplo. Lo que hemos supuesto es que un DEX tiene un sistema de referidos en el que se le aplica un 0,5% de descuento en cualquier tipo de swap a aquellas personas que pues vayan compartiendo el link de referidos a diferentes personas. Entonces, cada usuario tiene asignado un código de referidos que cuando se abre la página web, pues se le aplica. se imprime el mensaje de que tienen un descuento junto a su código de referidos. Este código de referidos lo coge de los parámetros de la URL. Entonces el problema aquí es que un atacante podría pasar esa URL pero en la variable referer meter un script que podría ejecutar lo que él quisiese. Entonces al aquí meter un script Cuando se vaya a añadir el HTML para poder imprimir esto en pantalla, aquí no se va a añadir una simple variable como es el código preferido, sino que se va a añadir el script que haya metido el usuario, que por lo tanto se va a ejecutar. Vale, entonces, para que veáis un poco el entorno que hemos preparado, nosotros nos hemos montado aquí un... un dex de pruebas para que veáis cómo funciona. Si un usuario quisiese entrar a esta página y hacer un swap de un token a otro, simplemente lo que tendría que hacer primero es desbloquear la billetera. Nosotros nos hemos creado una billetera de metamás de prueba. Entonces, conectamos. Hasta aquí no pasaría nada. Simplemente lo que quiere el exchange es poder ver tus direcciones. Bien, entonces, una vez nos hayamos conectado con nuestra billetera, lo que podría hacer un usuario aquí sería, pues, por ejemplo, intercambiar algún token por otro diferente. Entonces, imaginemos que el usuario aquí introduce un token. lo que estaríamos haciendo es coger de nuestros fondos un USDT e intercambiarlo por su equivalente ABUSD. Entonces, si pulsamos en swap, lo primero que nos va a pedir el exchange es que le demos permisos para poder acceder a nuestros fondos para que pueda intercambiar cualquier cantidad de nuestro USDT a BUSD. Entonces, antes de nada, tenemos que confirmar esto. Vale, entonces ahora, una vez ya hemos confirmado que el exchange pueda tener acceso a nuestros fondos, lo que nos va a pedir también es que confirmemos la transacción, ¿vale? Entonces esto tenemos que entender que es una interacción con un contrato, ¿vale? con el contrato de UntilSwap que lo que permite es cambiar de un token a otro. Entonces confirmamos la transacción. y ahora como vemos aquí se nos ha quitado la cantidad que hemos puesto de WSLT antes estaba a 27 porque he hecho unas pruebas antes de grabar esto entonces ahora tenemos 2 menos pero bueno si nos vamos aquí vemos que hemos interactuado con esta dirección que es la dirección de un contrato entonces si la abrimos en el explorador de bloques en Etherscan, vemos que hemos interactuado con este contrato de aquí. Si vemos aquí la función que se ha ejecutado, es swapExactToken por token, es decir, está cambiando, es decir, haciendo un swap, una cantidad exacta de tokens por otra cantidad de tokens. Si abrimos este contrato de aquí, podemos ver que es el contrato oficial de PangexSwap que se utiliza en su DEX para intercambiar tokens. hasta aquí todo correcto, no hay nada raro, todo funciona perfecto entonces ahora vamos a ver qué es lo que pasaría si el atacante nos pasase una dirección con este sistema de referidos del que estábamos hablando antes bien, entonces el atacante lo único que tendría que hacer es pasarle a la víctima esta URL que como veis es un poco diferente a la URL que había antes aquí lo que se está aprovechando el atacante es que es de que la variable referer se inyecta en el código HTML de la página del cliente de manera que le está pasando un script. Este script lo que hace es cambiar la dirección de la billetera del router de PancakeSwap, billetera no, perdón, contrato. Es decir, el contrato de PancakeSwap que lo que hace es interactuar con nuestra billetera para poder hacer el intercambio de tokens, pues lo que está haciendo el atacante es cambiarla. Cambiarla por un contrato que como podemos suponer es malicioso y ahora veremos que código tiene. Entonces el usuario vendría aquí, vamos a hacer lo mismo que antes. Vamos a cambiar usdt por busdd. Vamos a hacer como que cambiemos un toque. Como veis aquí ya aparecería el código diciéndonos que estamos en un línea de referidos y que se nos fabrica un 0,5% de descuento. en cualquier tipo de swap. Entonces vamos a hacer el cambio, pinchamos y ahora se nos abre esta ventana. Esta ventana como veis nos dice el mismo mensaje que antes, es decir, le estamos dando acceso al exchange, a todos nuestros fondos, pero si nos fijamos esta dirección no es la misma dirección que antes, es la dirección que nos ha inyectado el atacante mediante este script. Entonces vamos a ver lo que pasaría. confirmamos ahora tenemos que esperar y si nos abriría la otra ventana confirmando nuestra transacción, es decir confirmando el swap entre estos dos tokens. Vale ya tenemos por aquí Entonces, en principio no hay nada raro. En ningún sitio pone que a ti se te vaya a quitar toda la cantidad de tokens que tienes en tu billetera. Simplemente pone que tú vas a hacer una interacción con un contrato, igual que lo haces con el contrato de PampixSwap. Entonces, si confirmamos la transacción... Ahora aquí, en algún momento, si... Porque esta transacción tarda un poco, igual que tarda la de antes, ¿vale? Vemos que tenemos cero WFT. es decir, nos acaban de vaciar la cuenta simplemente haciendo lo mismo que hacíamos con el exchange bueno, es decir, sin la URL esta sin el script inyectado entonces, vamos a irnos a la dirección que yo tengo preparada que es donde yo he enviado los puntos y efectivamente aquí están los 25 WTT que como vemos, bueno no, esto lo veríamos en la cuenta en esta de aquí. Vamos a ver qué es lo que ha pasado. Bien, aquí lo que ha pasado es que hemos interactuado con este contrato exactamente ejecutando esta función, que realmente es el mismo nombre que tenía la función del contrato de PwnCashSwap, pero bueno, vamos a ver qué es lo que hace esta función del contrato malicioso. Lo primero que tenemos que fijarnos es que este contrato al desplegarse se le asigna un receiver, que va a ser la misma cuenta que haya desplegado este contrato. Luego, este contrato lo hemos escrito nosotros, entonces para que nos sea más fácil hacer las pruebas y asignar una billetera de atacante donde van a ir todos los fondos de la víctima, nos hemos creado esta función setReceiver que lo que hace es permitir cambiar la dirección de la cuenta. de la billetera que va a recibir todos los fondos. Obviamente esta función no tendría ningún sentido que un atacante real la escribiese porque entonces permitiría a cualquier persona poder cambiar la billetera donde van a ir todos los fondos del ataque. Lo que sí que nos interesa de verdad es esta función, swapExactTokensForTokens, que es la misma función que tenía el contrato original de PancakeSwap, pero esta... En cambio, lo que hace es coger el balance de todos los tokens de la cuenta de esta dirección, que esta dirección es la cuenta que interactúa con este contrato, es decir, nuestra billetera víctima, coge todo su balance y se lo transfiere al receiver, que recordemos que el receiver es el atacante, es decir, la persona que despliega este contrato. Por lo tanto, solo con estas dos líneas ya estaríamos enviando todo el balance de esta cuenta a la cuenta del atacante. Que como vemos aquí, se ha llevado todo el balance, todo el WTBT de la cuenta de la víctima. Bien, ya hemos visto como un atacante, aprovechando una vulnerabilidad de XSS ha podido robar todos los balances de una cuenta de la víctima. Entonces, lo que quiero que se entienda con este vídeo es que no todo en el mundo de Web3 en cuanto a seguridad tiene que ver con los smart contracts y la blockchain. Es decir, un DeFi, un DEX, cualquier aplicación que haya en Web3, tiene que tener un definitivo Al fin y al cabo tiene una parte de cliente y una parte de servidor, además de interactuar con la blockchain e interactuar con smart contracts. Pero tenemos que tener en cuenta que este cliente y este servidor puede tener vulnerabilidades, igual que las puede tener cualquier otra página web o cualquier otra aplicación. Por lo tanto, esto es importante porque a la hora de desarrollar este tipo de aplicaciones, no solo hay que tener en cuenta las seguridades de smart contracts, que también tienen vulnerabilidades, aún estando desplegadas en la blockchain. sino que también tenemos que hacer hincapié en la seguridad de las aplicaciones, tanto por la parte del cliente como por la parte del servidor, ya que, por ejemplo, en este caso, una vulnerabilidad de este tipo, un XSS, podría afectar muchísimo más a un cliente en una aplicación web 3 que una aplicación web 2. por el simple hecho de que los usuarios están interactuando con sus billeteras dentro de nuestra aplicación y sus billeteras dentro lo único que tienen es dinero. Entonces, simplemente para finalizar, quiero que reflexionéis un poco sobre lo que os acabo de comentar y que tengáis siempre en la cabeza la seguridad de las aplicaciones. y que blockchain no implica seguridad. Siguen habiendo vulnerabilidades tanto en Web3 como en Smart Contracts. Entonces nada, espero que os haya gustado el vídeo y que os haya servido de ejemplo para entender esto que os acabo de explicar. Un saludo.